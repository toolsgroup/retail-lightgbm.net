name: nuget_pack_push
run-name: ${{ github.actor }} is running ${{ github.workflow }} for branch ${{ github.ref_name }}
on:
    workflow_dispatch:
jobs:
    nuget_pack_push:
        name: nuget pack and push to Github Package Registry - call from ${{ github.actor }} for branch ${{ github.ref_name }}
        runs-on: ubuntu-latest
        steps:
            - 
                name: Checkout ${{ github.repository }} - ${{ github.ref_name }}
                uses: actions/checkout@v4
            # -
            #     name: Set up Docker Buildx
            #     uses: docker/setup-buildx-action@v3
            # - 
            #     name: Build and export
            #     uses: docker/build-push-action@v5
            #     with:
            #         context: .
            #         file: ./LightGBMNet.Train/Docker/Dockerfile.LightGBM.Build.Linux
            #         tags: microsoft/lightgbm:latest
            #         load: true
            # - 
            #     name: Copy Linux Build Files
            #     run: |
            #         docker run -d --rm --name dummy_container microsoft/lightgbm tail -f /dev/null
            #         docker cp dummy_container:/usr/local/lib/lib_lightgbm.so ./native/Release/lib_lightgbm.so
            #         docker cp dummy_container:/usr/local/bin/lightgbm ./native/Release/lightgbm
            #         docker stop dummy_container
            - 
                name: Setup .NET
                uses: actions/setup-dotnet@v3
                with:
                    dotnet-version: '6.0.x'
                    source-url: https://nuget.pkg.github.com/toolsgroup/index.json
                env:
                    NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - 
                name: Build projects
                run: |
                    dotnet build --configuration Release ./LightGBMNet.Tree
                    dotnet build --configuration Release /p:Platform=x64 ./LightGBMNet.Train
            - 
                name: Create the packages
                run: |
                    dotnet pack --configuration Release ./LightGBMNet.Tree
                    dotnet pack --configuration Release /p:Platform=x64 ./LightGBMNet.Train
            - 
                name: Publish the packages to GPR
                run: |
                    # dotnet nuget push ./LightGBMNet.Tree/bin/Release/*.nupkg
                    dotnet nuget push ./LightGBMNet.Train/bin/x64/Release/*.nupkg